import java.util.*; class Perfectice { static class Node { int key; Node left, right; } static Node newNode(int ele) { Node temp = new Node(); temp.key = ele; temp.left = null; temp.right = null; return temp; } static void printCommon(Node root1, Node root2) { Stack<Node> stack1 = new Stack<Node> (); Stack<Node> s1 = new Stack<Node> (); Stack<Node> s2 = new Stack<Node> (); while (true) { if (root1 != null) { s1.push(root1); root1 = root1.left; } else if (root2 != null) { s2.push(root2); root2 = root2.left; } else if (!s1.isEmpty() && !s2.isEmpty()) { root1 = s1.peek(); root2 = s2.peek(); if (root1.key == root2.key) { System.out.print(root1.key + " "); s1.pop(); s2.pop(); root1 = root1.right; root2 = root2.right; } else if (root1.key < root2.key) { s1.pop(); root1 = root1.right; root2 = null; } else if (root1.key > root2.key) { s2.pop(); root2 = root2.right; root1 = null; } } else break; } } static void inorder(Node root) { if (root != null) { inorder(root.left); System.out.print(root.key + " "); inorder(root.right); } } static Node insert(Node node, int key) { if (node == null) return newNode(key); if (key < node.key) node.left = insert(node.left, key); else if (key > node.key) node.right = insert(node.right, key); return node; } public static void main(String[] args) { Scanner s=new Scanner(System.in); Node root1 = null; Node root2 = null; int x; int n=s.nextInt(); for(int i=0; i<n; i++){ x = s.nextInt(); root1 = insert(root1, x); } int m=s.nextInt(); for(int i=0; i<m ;i++){ x = s.nextInt(); root2 = insert(root2, x); } printCommon(root1, root2); } } 